<footer class="footer">
  <div class="footer-inner">
    {{#link "help_center"}}{{help_center.name}}{{/link}}

    <div class="footer-language-selector">
      {{#if alternative_locales}}
      <div class="dropdown language-selector">
        <button class="dropdown-toggle" aria-haspopup="true">
          {{current_locale.name}}
          <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" focusable="false" viewBox="0 0 12 12"
            class="dropdown-chevron-icon">
            <path fill="none" stroke="currentColor" stroke-linecap="round" d="M3 4.5l2.6 2.6c.2.2.5.2.7 0L9 4.5" />
          </svg>
        </button>
        <span class="dropdown-menu dropdown-menu-end" role="menu">
          {{#each alternative_locales}}
          <a href="{{url}}" dir="{{direction}}" rel="nofollow" role="menuitem">
            {{name}}
          </a>
          {{/each}}
        </span>
      </div>
      {{/if}}
    </div>
  </div>

  <script>
    //날짜 포맷
    function formatDate(dateString) {
      // Parse the date string 
      const utcDate = new Date(dateString);
      // Calculate the offset for the Korea time zone (UTC+9) 
      const koreaOffset = 9 * 60 * 60 * 1000;
      // Adjust the date by adding the offset 
      const koreanDate = new Date(utcDate.getTime() + koreaOffset);
      // Format the date as you desire
      const formattedDate = `${koreanDate.getFullYear()}-${(koreanDate.getMonth() + 1).toString().padStart(2, '0')}-${koreanDate.getDate().toString().padStart(2, '0')}`;
      return formattedDate;
    }
    const timeStamps = document.querySelectorAll('.timestamp');
    timeStamps.forEach((node) => {
      const dateString = node.innerText.trim();
      node.innerText = formatDate(dateString);
      console.log(formatDate(dateString))
    })

    //상단 내비게이션 이벤트
    const currentPage = window.location.href;
    const mainNav = document.querySelector('.main-nav');
    const mainNavItem = document.querySelector('.main-nav-item');
    if (mainNav) {
      mainNav.addEventListener('mouseover', () => {
        mainNavItem.classList.add('active')
      }
      )

      mainNavItem.addEventListener('mouseleave', () => {
        mainNavItem.classList.remove('active')
      }
      )
    }

    //문서 드롭다운 이벤트
    const articleListItem = document.querySelectorAll('.article-list-item');
    const btnDropDown = document.querySelectorAll('.btn-dropdown-article');
    const dropDownArticle = document.querySelectorAll('.dropdown-article');
    if (btnDropDown) {
      btnDropDown.forEach((btn, index) => {
        btn.addEventListener('click', () => {
          articleListItem[index].classList.toggle('active');
        })
      })
    }

    //사용 안내 섹션 레이아웃 변경
    const fullLayout = document.querySelector('.full-display-layout');
    const initialLayout = document.querySelector('.initial-layout');
    const url = window.location.href
    if (url.includes('articles/9174786854799') || url.includes('articles/9174823130767')) {
      initialLayout.classList.remove('active');
      fullLayout.classList.add('active')
    }

    //문의등록 페이지
    const formData = {
      9396262528783: "sap",
      9396613790479: "tableau",
      9400419884175: "dlp",
      9396772890639: "google",
      9396343407631: "tAccounting",
      9396481705615: "tMarket",
      9396543350287: "tHR",
      9396591737615: "groupware",
      9396663504143: "network",
      9400347059215: "ssdam",
      9396797439375: "etc"
    }


    if (url.includes('ticket_form_id')) {
      for (const id in formData) {
        if (url.includes(id)) {
          document.querySelector('.form').classList.remove('inactive');
          document.querySelector('.form-select-menu ul').classList.add('folded');
          document.querySelector('.request_ticket_form_id').style.display = 'none';
          const formItem = document.getElementById(formData[id]);
          formItem.classList.add('selected')
        }
      }
    }
  </script>
</footer>